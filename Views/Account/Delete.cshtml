@*@model RoleBaseProject.Models.EditUserViewModel

@{
    ViewBag.Title = "Delete";
}

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>EditUserViewModel</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.UserName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>

    </dl>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>*@




@model yusuanxiangmu.Models.EditUserViewModel 

@*<h3>使用者账号刪除</h3>*@


<div style="padding-bottom:5px">
    当前位置：| &gt;参数设置  &gt; 用户管理 &gt; 删除用户
    <br />

</div>




<div class="form-horizontal">
    @*<h4>您确定要删除这个使用者的账号吗？</h4>*@


    <div class="form-group">
        <div class="col-md-4"></div>

        <div class="col-md-4">
            <h3>您确定要删除这个账号吗？</h3>
        </div>
        <div class="col-md-4"></div>
    </div>


    <hr />
    @*<dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.UserName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.UserName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FirstName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.LastName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.LastName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Email)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Email)
            </dd>

        </dl>*@


    <div class="form-group">
        <div class="col-md-1"></div>
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-1"></div>
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-1"></div>
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-1"></div>
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>


    @*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="刪除" class="btn btn-default" /> |
            @Html.ActionLink("回到使用者清单页面", "Index")
        </div>
    }*@



    <div class="form-group   has-error">
           <div class="col-md-3"></div>
           <div class="col-md-4">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-actions no-color">
                    <button type="submit" class="btn btn-primary">删除</button>
                    <button type="button" class="btn btn-primary" onclick="window.location.href = '@Url.Action("Index", "Account")'">返 回</button>
                </div>
            }
          </div>
          <div class="col-md-5"></div>
        </div>


</div>

